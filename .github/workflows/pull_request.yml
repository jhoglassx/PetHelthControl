name: Run test

on:
  pull_request:
    branches: [master]

env:
  JAVA_VERSION: 17

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: |
          SKIP_ERRORPRONE=true SKIP_JAVADOC=true \
          ./gradlew assemble

  checks:
    name: Checks
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Check Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Check lint
        run: ./gradlew lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew clean testDebug

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test_results_${{ matrix.api-versions }}
          path: '**/build/test-results/**/TEST-*.xml'

  instrumentation-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build

    strategy:
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast: false
      matrix:
        api-level: [29, 34]

    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: true
          android: false

      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Determine emulator target
        id: determine-target
        run: |
          TARGET="google_apis"
          if [[ ${{ matrix.api-level }} -ge 34 ]]; then
            TARGET="aosp_atd"
          fi
          echo "TARGET=$TARGET" >> $GITHUB_OUTPUT

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-ubuntu-${{ matrix.api-level }}-${{ env.cache-version }}

      - name: Create AVD and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ steps.determine-target.outputs.TARGET }}
          arch: x86_64
          force-avd-creation: ${{ steps.avd-cache.outputs.cache-hit != 'true' }}
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          profile: Nexus One
          script: SKIP_ERRORPRONE=true SKIP_JAVADOC=true ./gradlew cAT --stacktrace --no-watch-fs -Dorg.gradle.workers.max=2

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.api-level }}-${{ steps.determine-target.outputs.TARGET }}-${{ matrix.shard }}
          path: |
            **/build/reports/*
            **/build/outputs/*/connected/*