name: Run test

on:
  pull_request:
    branches: [master]

env:
  JAVA_VERSION: 21

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: |
          SKIP_ERRORPRONE=true SKIP_JAVADOC=true \
          ./gradlew assemble

  checks:
    name: Checks
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Check Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Check lint
        run: ./gradlew lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [ checks, build ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew

      - name: Run unit tests for all modules
        run: ./gradlew testDebugUnitTest

      - name: Save coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-unit-data
          path: '**/build/jacoco/*.exec'

  instrumentation-tests:
    name: Instrumentation Tests1
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [ checks, build ]
    steps:
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedDebugAndroidTest --stacktrace

      - name: Save coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-instrumentation-data
          path: '**/build/outputs/code-coverage/connected/*'

  coverage-unit-report:
    name: Coverage Unit Report
    runs-on: ubuntu-latest
    needs: [ unit-tests ]
    steps:
      - name: Checkout code
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Download unit test coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-unit-data

      - name: Generate JaCoCo reports for all modules
        run: ./gradlew jacocoTestReport

      - name: Upload all unit test coverage reports as artifact
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-unit-test-reports
          path: |
            app/build/reports/jacoco/jacocoTestReport/html/
            data/build/reports/jacoco/jacocoTestReport/html/
            domain/build/reports/jacoco/jacocoTestReport/html/
            infrastructure/build/reports/jacoco/jacocoTestReport/html/

  coverage-instrumentation-report:
    name: Coverage Instrumentation Report
    runs-on: ubuntu-latest
    needs: [ instrumentation-tests ]
    steps:
      - name: Checkout code
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Download instrumentation test coverage data
        uses: actions/download-artifact@v3
        with:
          name: coverage-instrumentation-data

      - name: Generate JaCoCo report for instrumentation tests
        run: ./gradlew createDebugCoverageReport

      - name: Upload instrumentation test coverage reports as artifact
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-instrumentation-reports
          path: |
            app/build/reports/jacoco/coverage/

  combined-coverage-report:
    name: Combined Coverage Report
    runs-on: ubuntu-latest
    needs: [ coverage-unit-report, coverage-instrumentation-report ]
    steps:
      - name: Checkout code
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Download unit test coverage data
        uses: actions/download-artifact@v3
        with:
          name: jacoco-unit-test-reports

      - name: Download instrumentation test coverage data
        uses: actions/download-artifact@v3
        with:
          name: jacoco-instrumentation-reports

      - name: Combine and Generate Combined JaCoCo Report
        run: ./gradlew jacocoTestReport --continue

      - name: Upload combined coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-combined-coverage-report
          path: '**/build/reports/jacoco/jacocoTestReport/html/'

      - name: Upload combined coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: '**/build/reports/jacoco/jacocoTestReport/xml/report.xml'