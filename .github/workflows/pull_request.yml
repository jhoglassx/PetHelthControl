name: Run test

on:
  pull_request:
    branches: [master]

env:
  JAVA_VERSION: 21

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - name: Build
        run: |
          SKIP_ERRORPRONE=true SKIP_JAVADOC=true \
          ./gradlew assemble

  checks:
    name: Checks
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Check Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Check lint
        run: ./gradlew lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [checks, build]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Grant execute permissions for gradlew
        run: chmod +x gradlew

      - name: Run unit tests for app module
        run: ./gradlew :app:testDebug

      - name: Run unit tests for data module
        run: ./gradlew :data:testDebug

      - name: Run unit tests for domain module
        run: ./gradlew :domain:testDebug

      - name: Run unit tests for infrastructure module
        run: ./gradlew :infrastructure:testDebug

      - name: Upload unit Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test_results_${{ matrix.api-versions }}
          path: '**/build/test-results/**/TEST-*.xml'

  instrumentation-tests:
    name: Instrumentation Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [checks, build]

    steps:
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew clean connectedCheck --stacktrace
        env:
          API_LEVEL: 29

      - name: Upload instrumentation test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.api-level }}-${{ steps.determine-target.outputs.TARGET }}-${{ matrix.shard }}
          path: |
            **/build/reports/*
            **/build/outputs/*/connected/*


  coverage-unit-report:
    name: Coverage Unit Report
    runs-on: ubuntu-latest
    needs: [ unit-tests ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Generate JaCoCo reports for all modules
        run: |
          ./gradlew :app:jacocoTestReport
          ./gradlew :data:jacocoTestReport
          ./gradlew :domain:jacocoTestReport
          ./gradlew :infrastructure:jacocoTestReport

      - name: Upload all unit test coverage reports as artifact
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-unit-test-reports
          path: |
            app/build/reports/jacoco/jacocoTestReport/html/
            data/build/reports/jacoco/jacocoTestReport/html/
            domain/build/reports/jacoco/jacocoTestReport/html/
            infrastructure/build/reports/jacoco/jacocoTestReport/html/

      - name: Upload unit test coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: |
            app/build/reports/jacoco/jacocoTestReport/xml/report.xml
            data/build/reports/jacoco/jacocoTestReport/xml/report.xml
            domain/build/reports/jacoco/jacocoTestReport/xml/report.xml
            infrastructure/build/reports/jacoco/jacocoTestReport/xml/report.xml

  coverage-instrumentation-report:
    name: Coverage Instrumentation Report
    runs-on: ubuntu-latest
    needs: [ instrumentation-tests ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Generate JaCoCo report for instrumentation tests
        run: ./gradlew jacocoTestReport

      - name: Upload instrumentation test coverage reports as artifact
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-instrumentation-reports
          path: |
            app/build/reports/jacoco/coverage/

      - name: Upload instrumentation test coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: |
            app/build/reports/jacoco/coverage/coverage.ec